version: '3'
services:
  strapi:
    container_name: strapi
    build: .
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/app/package.json
      - ./package-lock.json:/opt/app/package-lock.json
      - ./.env:/opt/app/.env
      - strapi-uploads:/opt/app/public/uploads  # Named volume for uploads
    user: "node"
    ports:
      - '1337:1337'
    networks:
      - strapi
    depends_on:
      strapiDB:
        condition: service_healthy

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 
    restart: unless-stopped
    env_file: .env
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/mysql
    ports:
      - '3306:3306'
    networks:
      - strapi
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DATABASE_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  strapiAdminer:
    container_name: strapiAdminer
    image: adminer
    restart: unless-stopped
    ports:
      - '9090:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=strapiDB
    networks:
      - strapi
    depends_on:
      - strapiDB

  # Initialize uploads volume with correct permissions
  volume-permissions:
    image: busybox
    user: "root"
    command: sh -c "mkdir -p /opt/app/public/uploads && chown -R 1000:1000 /opt/app/public/uploads"
    volumes:
      - strapi-uploads:/opt/app/public/uploads

volumes:
  strapi-data:
  strapi-uploads:  # Defined the volume here

networks:
  strapi:
    name: Strapi
    driver: bridge